% \iffalse meta-comment
%
% Copyright (C) 2021 by Geraldo Xexéo
%
% This file may be distributed and/or modified under the
% conditions of the LaTeX Project Public License, either
% version 1.3 of this license or (at your option) any later
% version. The latest version of this license is in:
%
% http://www.latex-project.org/lppl.txt
%
% and version 1.3 or later is part of all distributions of
% LaTeX version 2005/12/01 or later.
%
% \fi
%
%
%\iffalse
%<package>\NeedsTeXFormat{LaTeX2e}
%<package>\def\pw@version{v1.2.3}
%<package>\ProvidesPackage{pattern-writing}[2021/10/26 \pw@version dtx version of pattern-writing]
%<*driver>
\documentclass{ltxdoc}%
\usepackage[T1]{fontenc}%
\usepackage[utf8]{inputenc}%
\usepackage{csquotes}%
\usepackage[brazilian,english]{babel}%
\usepackage{datetime}%
\usepackage{indentfirst}%
\usepackage{enumitem}%
\usepackage{graphicx}%
\setlist{noitemsep}%
\setlength{\parskip}{0.5em}%
\usepackage[backend=biber,style=alphabetic,natbib]{biblatex}%
\addbibresource{padroes.bib}%
%%\usepackage{textcomp,url,a4wide,array}
%%\usepackage[eso-foot,today,draft]{svninfo}
%%\usepackage{xcolor}
\usepackage{pattern-writing}%
\usepackage{hyperref}%
%
%
%
%
\EnableCrossrefs%
\CodelineIndex%
\RecordChanges%
%
\DoNotIndex{\def,\long,\edef,\xdef,\gdef,\let,\global}%
\DoNotIndex{\begin,\AtEndDocument,\newcommand,\newcounter,\stepcounter}%
\DoNotIndex{\immediate,\openout,\closeout,\message,\typeout}%
\DoNotIndex{\section,\scshape,\arabic}%
%
%
%
\title{pattern-writing 0.1}%
\author{Geraldo Xexéo}%
\date{\today\ - \ \currenttime}%
\GetFileInfo{pattern-writing.sty}%
%
\makeindex%
\MakeShortVerb{\|}%
\begin{document}%
\DocInput{pattern-writing.dtx}%
\printbibliography%
\end{document}%
%</driver>
% \fi
%
% \CheckSum{798}
%
% \CharacterTable
%  {Upper-case    \A\B\C\D\E\F\G\H\I\J\K\L\M\N\O\P\Q\R\S\T\U\V\W\X\Y\Z
    %   Lower-case    \a\b\c\d\e\f\g\h\i\j\k\l\m\n\o\p\q\r\s\t\u\v\w\x\y\z
    %   Digits        \0\1\2\3\4\5\6\7\8\9
    %   Exclamation   \!     Double quote  \"     Hash (number) \#
    %   Dollar        \$     Percent       \%     Ampersand     \&
    %   Acute accent  \'     Left paren    \(     Right paren   \)
    %   Asterisk      \*     Plus          \+     Comma         \,
    %   Minus         \-     Point         \.     Solidus       \/
    %   Colon         \:     Semicolon     \;     Less than     \<
    %   Equals        \=     Greater than  \>     Question mark \?
    %   Commercial at \@     Left bracket  \[     Backslash     \\
    %   Right bracket \]     Circumflex    \^     Underscore    \_
    %   Grave accent  \`     Left brace    \{     Vertical bar  \|
    %   Right brace   \}     Tilde         \~}
%
% \changes{v1.0}{2021/10/26}{First version}
%\maketitle
%
% \tableofcontents
%
% \section{Introduction}
%
% This is a \LaTeX style to help writing pattern languages~\citep{c2:def}.
%
% It directly supports two formats for describing patterns: Portland style (if-then) and Coplien's style.
%
% \section{Options}
%
% \DescribeMacro{index}
% \DescribeMacro{noindex}
%
%  These options turn pattern indexing true or false
%
% \DescribeMacro{graph}
% \DescribeMacro{nograph}
%
%  These option turn graph generation true or false
%
% \section{Commands}
% In this package you can:
% \begin{itemize}
%    \item declare a pattern;
%    \item describe a pattern in two formats, Portland and Coplien's;
%    \item refer to a pattern;
%    \item declara an anti-pattern;
%   \item refer to an anti-pattern;
%    \item create a graph, and
%    \item configure some parameters.
% \end{itemize}
% \subsection{Declaring patterns and anti-patterns}
% \DescribeMacro{pattern}
% \DescribeMacro{anti-pattern}
%
% |\pattern|\marg{pattern-name}
%
% |\antipattern|\marg{anti-pattern-name}
%
%  Those macros declare a pattern or a anti-pattern and put the on the index if |index| is turned on. A pattern is also put in the graph, if |graph| is turned on.
% \subsection{Refering to patterns and anti-patterns}
%
% \DescribeMacro{patternref}
% \DescribeMacro{antipatternref}
%
% |\pattern|\oarg{how-to-print}{pattern-name}
%
%  |\antipattern|\oarg{how-to-print}{antipattern-name}
%
%  Those commands make a reference (with link) to patterns and anti-patterns, allowing for changes in the name, such as putting it in the plural.
%
% \subsection{Graph Commands}
% \DescribeMacro{\pstartgraph}
% \DescribeMacro{\pstopgraph}
% \DescribeMacro{\pgetgraph}
% \DescribeMacro{\setPatternGraphLayout}
%
%
% \subsection{Pattern description}
% \DescribeMacro{\portland}
% |\portland|\marg{if part}\marg{then part}
%
% \DescribeMacro{\coplien}
% |\coplien| \marg{problem}\marg{context}\marg{forces}\marg{solution}
%
%\marg{reasoning}\marg{resultingcontext}
%
%
% \section{Code}
% \subsection{Option Processing}
%
% \begin{macro}{index}
% \begin{macro}{noindex}
% \begin{macro}{graph}
% \begin{macro}{nograph}
% The style accepts two pair of options.
%
% |index|/|noindex| controls if a index will be generated
%
% |graph|/|nograph| controls if it will be possible to generate and use a graph
%
% The default is |index| and |graph|
%    \begin{macrocode}
\newif\if@showindex\@showindextrue%
\newif\if@showgraph\@showgraphtrue%
\newif\if@graphstarted\@graphstartedfalse%
%
\DeclareOption{index}{\@showindextrue}%
\DeclareOption{noindex}{\@showindexfalse}%
\DeclareOption{graph}{\@showgraphtrue}%
\DeclareOption{nograph}{\@showgraphfalse}%
%
\ProcessOptions\relax%
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
% \subsection{Required Packages}
%  |pattern-writing| requires xparse to use NewDocumentCommand and
% other syntax, requires |xcolor| to color anti-patterns, |makeidx|
%  to control the index of patterns and |tikz| and sub-packages
% to draw the graph
%    \begin{macrocode}
\RequirePackage{xparse}%
\RequirePackage{xcolor}%
\if@showindex%
\RequirePackage{makeidx}%
\fi%
\if@showgraph%
\RequirePackage{pgf,tikz}%
\usetikzlibrary {graphs}%
%%\usetikzlibrary {graphs.standard}
\usetikzlibrary{graphdrawing}%
\usegdlibrary{circular,trees,force,layered}%
\fi%
%
%    \end{macrocode}
% \subsection{Graph Support}
%  With we use graph, some settings muste be enalbe
%
%    \begin{macrocode}
\if@showgraph%
\def\p@filename{graph.tikz}%
\def\p@CurrentPattern{ZERO}%
%
% standard layout for the graph
%
\def\p@GraphLayout{spring layout, node distance = 80mm}%
\NewDocumentCommand{\psetfilename}{m}{%
\def\p@filename{#1}%
}%
%    \end{macrocode}
%
% \begin{macro}{\pstartgraph}
%  This macro starts the processing of declarations to create the graph
%https://tex.stackexchange.com/questions/115932/on-the-basics-of-writing-to-reading-from-auxiliary-files-aux-toc-etc
%    \begin{macrocode}
\NewDocumentCommand{\pstartgraph}{}{%
\newwrite\p@fileh%
\immediate\openout\p@fileh=\p@filename%
% tryed tikz, problem with accents
\immediate\write\p@fileh{\unexpanded{\resizebox{\textwidth}{!}}\@charlb\unexpanded{\begin{tikzpicture}  \graph [}\p@GraphLayout%
\unexpanded{]} \@charlb}%
\@graphstartedtrue%
}%
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\pstopgraph}
%  This macro stops the processing of declarations to create the graph
%https://tex.stackexchange.com/questions/115932/on-the-basics-of-writing-to-reading-from-auxiliary-files-aux-toc-etc
%    \begin{macrocode}
\NewDocumentCommand{\pstopgraph}{}{%
\immediate\write\p@fileh{\@charrb%
\unexpanded{;\end{tikzpicture}}\@charrb}%
\immediate\closeout\p@fileh%
\@graphstartedfalse%
}%
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\setPatternGraphLayout}
% This macro is used to set tikz commands for the graph layout.
% Please check tikz for possible values.
%    \begin{macrocode}
\NewDocumentCommand{\setPatternGraphLayout}{m}{%
    \def\p@GraphLayout{#1}%
}%
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\pgetgraph}
%    \begin{macrocode}
\NewDocumentCommand{\pgetgraph}{}{%
    \IfFileExists{\p@filename}%
    {\input{\p@filename}}%
    {}%
}%
%    \end{macrocode}
% \end{macro}
%    \begin{macrocode}
\NewDocumentCommand{\pnode}{m}{%
    \if@graphstarted
    \immediate\write\p@fileh{"#1";}%
    \def\p@CurrentPattern{#1}%
    \fi
}%
\NewDocumentCommand{\pedge}{om}{%
    \if@graphstarted
    \IfNoValueTF{#1}
    {\immediate\write\p@fileh{"\p@CurrentPattern" -- "#2";}}%
    {\immediate\write\p@fileh{"#1" -- "#2";}}%
    \fi
}%
\else  % Nada
\def\p@filename{graph.tikz}%
\def\p@currentPattern{ZERO}%
\NewDocumentCommand{\psetfilename}{m}{}%
\NewDocumentCommand{\pstartgraph}{}{}%
\NewDocumentCommand{\pstopgraph}{}{}%
\NewDocumentCommand{\pgetgraph}{}{\includegraphics[width=\textwidth]{example-image-a}}%
\NewDocumentCommand{\psetcurrentpattern}{m}{%
}%
\NewDocumentCommand{\pgetcurrentpattern}{}{%
}%
\NewDocumentCommand{\pnode}{m}{}%
\NewDocumentCommand{\pedge}{om}{}%
\NewDocumentCommand{\setPatternGraphLayout}{m}{}%
\fi
%    \end{macrocode}
% \subsection{Patterns}
% \begin{macro}{\pattern}
% This macro declares a pattern (as a subsection).
%    \begin{macrocode}
\NewDocumentCommand{\pattern}{m}{\subsection{#1}\label{sec:#1}%
    \if@showindex%
    \index{#1|textbf}%
    \fi%
    \if@showgraph%
    \pnode{#1}
    \fi
}%
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\patternref}
% This macro makes a reference to a pattern, possibly changing the
%  text in its option
%    \begin{macrocode}
\NewDocumentCommand{\patternref}{om}{%
    \IfNoValueTF{#1}%
    {\hyperref[sec:#2]{\textbf{#2}}}%
    {\hyperref[sec:#2]{\textbf{#1}}}%
    \if@showindex%
    \index{#2}%
    \fi%
    \if@showgraph%
    \pedge{#2}
    \fi
}%
%    \end{macrocode}
% \end{macro}
% \subsection{Anti-Patterns}
% \begin{macro}{\antipattern}
% This macro declares anti-pattern (as red text).
%    \begin{macrocode}
\NewDocumentCommand{\antipattern}{m}{\textcolor{red}{#1}%
    \label{sec:#1}%
    \if@showindex%
    \index{\textcolor{red}{#1}|textbf}%
    \fi%
}%
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\antipatternref}
% This macro makes a reference to an anti-pattern, also in red text
%
%    \begin{macrocode}
\NewDocumentCommand{\antipatternref}{om}{%
    \IfNoValueTF{#1}%
    {\hyperref[sec:#2]{\textcolor{red}{\textbf{#2}}}}%
    {\hyperref[sec:#2]{\textcolor{red}{\textbf{#1}}}}%
    \if@showindex%
    \index{\textcolor{red}{#2}}%
    \fi%
}%
%    \end{macrocode}
% \end{macro}
% \subsection{Pattern Writing Styles}
% \begin{macro}{\setportlandkeys}
% |\setportlandkeys|\marg{if-key}\marg{then-key}
%   sets the values for if-then when writing a Portland-style pattern
%
%    \begin{macrocode}
\NewDocumentCommand{\setportlandkeys}{mm}{%
    \def\portland@ifkey{#1}%
    \def\portland@thenkey{#2}%
}%
%    \end{macrocode}
% \end{macro}
% \begin{macro}{portland}
% |\portland|\marg{if part}\marg{then part}
%    \begin{macrocode}
\setportlandkeys{SE}{ENTÃO}
\NewDocumentCommand{\portland}{mm}{\textbf{\def\portland@ifkey~}%
    #1%
    \textbf{~\def\portland@thenkey~} #2}%
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\setcoplienkeys}
% |\setportlandkeys|\marg{problem}\marg{context}\marg{forces}\marg{solution}\marg{reasoning}\marg{resultingcontext}
%   sets the values for if-then when writing a Portland-style pattern
%
%    \begin{macrocode}
\NewDocumentCommand{\setcoplienkeys}{mmmmmm}{%
    \def\coplien@key@prob{#1}%
    \def\coplien@key@cont{#2}%
    \def\coplien@key@forc{#3}%
    \def\coplien@key@solu{#4}%
    \def\coplien@key@reas{#5}%
    \def\coplien@key@cnrs{#6}%
}%
\setcoplienkeys{\textbf{Problema:}}{\textbf{Contexto:}}{\textbf{Forças:}}{\textbf{Solução:}}{\textbf{Raciocínio:}}{\textbf{Contexto Resultante:}}%
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\coplien}
% |\coplien| \marg{problem}\marg{context}\marg{forces}\marg{solution}\marg{reasoning}\marg{resultingcontext}
%
%  Writes a pattern in Coplien format
%    \begin{macrocode}
\NewDocumentCommand{\coplien}{mmmmmm}{%
    \textbf{\coplien@key@prob}: #1 \par%
    \textbf{\coplien@key@cont}: #2\par%
    \textbf{\coplien@key@forc}: #3 \par%
    \textbf{\coplien@key@solu}: #4 \par%
    \textbf{\coplien@key@reas}: #5 \par%
    \textbf{\coplien@key@cnrs}: #6 \par%
}%
%    \end{macrocode}
% \end{macro}
% \subsection{Index making}
%    \begin{macrocode}
\if@showindex%
\makeindex%
\fi%
%    \end{macrocode}
% \Finale
%
% \endinput
% Local Variables:
% mode: doctex
% TeX-master: t
% End:
